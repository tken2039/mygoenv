{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"err": {
		"prefix": "err", 
		"body": [
			"if err != nil {\n\t$1\n}"
		],
		"description": "err tag"
	},

	"println": {
		"prefix": "print", 
		"body": [
			"fmt.Println($1)"
		],
		"description": "println"
	},

	"printf": {
		"prefix": "printf", 
		"body": [
			"fmt.Printf($1)"
		],
		"description": "printf"
	},

	"struct": {
		"prefix": "struct", 
		"body": [
			"struct {\n\t$1\n}"
		],
		"description": "struct"
	},

	"typeStruct": {
		"prefix": "types", 
		"body": [
			"type $1 struct {\n\t$2\n}"
		],
		"description": "type hoge struct"
	},

	"standardHandler": {
		"prefix": "handle",
		"body": [
			"func $1(w http.ResponseWriter, r *http.Request) {\n\t$2\n}",
		],
		"description": "httpHandler"
	}
}